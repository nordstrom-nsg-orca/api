service: nsg-acl

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  region: us-west-2
  stage: ${opt:stage, 'nonprod'}
  runtime: nodejs10.x
  environment:
    DYNAMODB_TABLE: ${self:custom.ACLTableName}

custom:
  ACLTableName: !ImportValue ACLTableName
  ACLTableARN: !ImportValue ACLTableARN
  webpack:
    webpackConfig: webpack.config.js
    includeModules: false

package:
  individually: true

functions:
  create:
    handler: acl/create.create
    role: NSGLambdaRole
    events:
      - http:
          path: create
          method: post
          cors: true

  list:
    handler: acl/list.list
    role: NSGLambdaRole
    events:
      - http:
          path: list
          method: get
          cors: true

#   get:
#     handler: todos/get.get
#     events:
#       - http:
#           path: todos/{id}
#           method: get
#           cors: true

#   update:
#     handler: todos/update.update
#     events:
#       - http:
#           path: todos/{id}
#           method: put
#           cors: true

#   delete:
#     handler: todos/delete.delete
#     events:
#       - http:
#           method: delete
#           cors: true

resources:
  Resources:
    NSGLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${self:provider.stage}-NSGLambdaRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Principal:
                Service: lambda.amazonaws.com
        Path: /
        Policies:
          - PolicyName: ${self:service}-${self:provider.stage}-NSGLambdaPolicy
            PolicyDocument:
              Version: '2017-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
            #       - dynamodb:Query
            #       - dynamodb:Scan
            #       - dynamodb:GetItem
            #       - dynamodb:UpdateItem
            #       - dynamodb:DeleteItem
                  Resource: ${self:custom.ACLTableARN}

        ManagedPolicyArns:
          - Fn::ImportValue: fff000-iam-${self:provider.stage}-nsgtoolbox-01-TeamManagedPolicy


plugins:
  - serverless-webpack