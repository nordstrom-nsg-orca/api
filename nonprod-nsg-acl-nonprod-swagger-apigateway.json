{
  "swagger": "2.0",
  "info": {
    "description": "This is NSG endpoints to interact with ACLs data",
    "version": "2020-01-13T18:57:21Z",
    "title": "nonprod-nsg-acl"
  },
  "host": "girm9btzs7.execute-api.us-west-2.amazonaws.com",
  "basePath": "/nonprod",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/retrieveKey": {
      "get": {
        "responses": {},
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:046711174152:function:nsg-acl-nonprod-retrieveKey/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "mock"
        }
      }
    },
    "/api/{table}": {
      "get": {
        "responses": {},
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:046711174152:function:nsg-acl-nonprod-list/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "post": {
        "summary": "Creates a table in the database with the specified name",
        "responses": {},
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:046711174152:function:nsg-acl-nonprod-create/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "mock"
        }
      }
    },
    "/api/{table}/{id}": {
      "put": {
        "responses": {},
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:046711174152:function:nsg-acl-nonprod-update/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "delete": {
        "summary": "Delete data in the database",
        "responses": {},
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:046711174152:function:nsg-acl-nonprod-delete/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "type": "aws_proxy"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "mock"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-api-key",
      "in": "header"
    }
  },
  "x-amazon-apigateway-documentation": {
    "version": "0.1.1",
    "createdDate": "2020-01-13T20:49:35Z",
    "documentationParts": [
      {
        "location": {
          "type": "API"
        },
        "properties": {
          "info": {
            "description": "This is NSG endpoints to interact with ACLs data"
          }
        }
      },
      {
        "location": {
          "type": "METHOD",
          "path": "/api/{table}/{id}",
          "method": "DELETE"
        },
        "properties": {
          "summary": "Delete data in the database"
        }
      },
      {
        "location": {
          "type": "METHOD",
          "path": "/api/{table}",
          "method": "POST"
        },
        "properties": {
          "summary": "Creates a table in the database with the specified name"
        }
      },
      {
        "location": {
          "type": "PATH_PARAMETER",
          "path": "/api/{table}/{id}",
          "method": "DELETE",
          "name": "id"
        },
        "properties": {
          "description": "ID of the data to be deleted"
        }
      },
      {
        "location": {
          "type": "PATH_PARAMETER",
          "path": "/api/{table}/{id}",
          "method": "DELETE",
          "name": "table"
        },
        "properties": {
          "description": "Table name to delete"
        }
      },
      {
        "location": {
          "type": "PATH_PARAMETER",
          "path": "/api/{table}",
          "method": "POST",
          "name": "table"
        },
        "properties": {
          "description": "Table name to create"
        }
      },
      {
        "location": {
          "type": "RESPONSE",
          "path": "/api/{table}/{id}",
          "method": "DELETE",
          "statusCode": "200"
        },
        "properties": {
          "description": "ok"
        }
      },
      {
        "location": {
          "type": "RESPONSE",
          "path": "/api/{table}/{id}",
          "method": "DELETE",
          "statusCode": "400"
        },
        "properties": {
          "description": "Bad request"
        }
      },
      {
        "location": {
          "type": "RESPONSE",
          "path": "/api/{table}/{id}",
          "method": "DELETE",
          "statusCode": "500"
        },
        "properties": {
          "description": "Database error"
        }
      },
      {
        "location": {
          "type": "RESPONSE",
          "path": "/api/{table}",
          "method": "POST",
          "statusCode": "200"
        },
        "properties": {
          "description": "ok"
        }
      },
      {
        "location": {
          "type": "RESPONSE",
          "path": "/api/{table}",
          "method": "POST",
          "statusCode": "400"
        },
        "properties": {
          "description": "Bad request"
        }
      },
      {
        "location": {
          "type": "RESPONSE",
          "path": "/api/{table}",
          "method": "POST",
          "statusCode": "500"
        },
        "properties": {
          "description": "Database error"
        }
      }
    ]
  }
}